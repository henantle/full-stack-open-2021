{"version":3,"sources":["components/filter.js","components/person.js","components/persons.js","services/personservice.js","components/personform.js","components/notification.js","App.js","reportWebVitals.js","index.js"],"names":["Filter","setNewFilterValue","onChange","target","value","Person","props","handleDelete","console","log","name","number","onClick","id","Persons","namesToShow","map","person","baseUrl","axios","get","then","response","data","newObject","post","put","delete","Personform","newName","newPhoneNumber","persons","setPersons","setNewName","setNewPhoneNumber","setNotificationMessage","onSubmit","event","preventDefault","contactObject","alreadyExistingContact","find","confirmUpdate","window","confirm","updatedContact","personId","personservice","returnedContact","setTimeout","concat","type","Notification","message","className","App","useState","newFilterValue","notificationMessage","useEffect","Personservice","initialPersons","filter","toLowerCase","includes","foo","deletePersonFromUI","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.70fd4fe2.chunk.js","sourcesContent":["import React from 'react'\n\nconst Filter = ({ setNewFilterValue }) => {\n    return (\n        <input onChange={({ target }) => setNewFilterValue(target.value)}/>\n    )\n}\n\nexport default Filter\n","import React from 'react'\n\nconst Person = (props) => {\n    const handleDelete = props.handleDelete\n    console.log(props);\n\n    return (\n        <div>\n        <span>{props.name} {props.number}</span>\n        <button onClick={() => handleDelete(props.id)}>delete</button>\n        </div>\n    )\n}\n\nexport default Person\n\n","import React from 'react'\nimport Person from './person'\n\nconst Persons = (props) => {\n    const namesToShow = props.namesToShow\n    const handleDelete = props.handleDelete\n    console.log(namesToShow)\n    console.log(typeof namesToShow)\n    return (\n        <div>\n            <h2>Numbers</h2>\n            {\n             namesToShow.map(person => <Person key={person.id} id={person.id} name={ person.name } number={person.number} handleDelete = {handleDelete} />)\n            }\n        </div>\n    )\n}\n\nexport default Persons","import axios from 'axios'\nconst baseUrl = 'https://secure-headland-53982.herokuapp.com/'\n\nconst getAll = () => {\n  const request = axios.get(baseUrl)\n  return request.then(response => response.data)\n}\n\nconst create = newObject => {\n  const request = axios.post(baseUrl, newObject)\n  return request.then(response => response.data)\n}\n\nconst update = (id, newObject) => {\n  const request = axios.put(`${baseUrl}/${id}`, newObject)\n  return request.then(response => response.data)\n}\n\nconst exterminate = (id) => {\n    const request = axios.delete(`${baseUrl}/${id}`)\n    return request.then(response => response.data)\n}\n\nexport default { \n  getAll, create, update, exterminate\n}","import React from 'react'\nimport personservice from '../services/personservice'\n\nconst Personform = (props) => {\n\n    const newName = props.newName\n    const newPhoneNumber = props.newPhoneNumber\n    const persons = props.persons\n    const setPersons = props.setPersons\n    const setNewName = props.setNewName\n    const setNewPhoneNumber = props.setNewPhoneNumber\n    const setNotificationMessage = props.setNotificationMessage\n\n    const addName = (event) => {\n        event.preventDefault()\n        const contactObject = {\n          name: newName,\n          number: newPhoneNumber\n        }\n        const alreadyExistingContact = persons.find((person) => person.name === newName);\n        \n        if (alreadyExistingContact) {\n          const confirmUpdate = window.confirm(`${contactObject.name} is already added to phonebook, replace the old number with a new one?`);\n          console.log(alreadyExistingContact)\n          if (confirmUpdate) {\n            const updatedContact = {...alreadyExistingContact, number: newPhoneNumber}\n            const personId = updatedContact.id\n            console.log(updatedContact)\n            console.log(personId)\n            personservice.update(personId, updatedContact).then((returnedContact) => {\n              setPersons(persons.map((person) => person.id !== personId ? person : returnedContact))\n              setNotificationMessage(\n                `Contact '${updatedContact.name}' was successfully updated to server`\n              )\n              setTimeout(() => {\n                setNotificationMessage(null)\n              }, 5000)\n            })\n          }\n        } else {\n            setPersons(persons.concat(contactObject))\n            personservice.create(contactObject).then(returnedContact => {\n              setPersons(persons.concat(returnedContact))\n              setNewName('')\n              setNewPhoneNumber('')\n              setNotificationMessage(\n                `Contact '${contactObject.name}' was successfully saved to server`\n              )\n              setTimeout(() => {\n                setNotificationMessage(null)\n              }, 5000)\n            })\n        }\n      }\n    \n      const handleNameChange = (event) => {  \n          console.log(event.target.value)\n          setNewName(event.target.value)  \n        }\n    \n      const handlePhoneNumberChange = (event) => {  \n        console.log(event.target.value)\n        setNewPhoneNumber(event.target.value)  \n      }\n\n    return (\n        <form onSubmit={addName}>\n            <h2>add a new</h2>\n            <div>\n            name: <input value={newName} onChange={handleNameChange} />\n            </div>\n            <div>\n            phone number: <input value={newPhoneNumber} onChange={handlePhoneNumberChange} />\n            </div>\n            <div>\n            <button type=\"submit\">add</button>\n            </div>\n      </form>\n    )\n}\n\nexport default Personform\n","import React from 'react'\n\nconst Notification = (props) => {\n    const message = props.message\n    if (message === null) {\n        return null\n    }\n\n    return (\n        <div className=\"success\">\n        {message}\n        </div>\n    )\n}\n\nexport default Notification","import Filter from './components/filter'\nimport Persons from './components/persons'\nimport Personform from './components/personform'\nimport React, { useState, useEffect } from 'react'\nimport Personservice from './services/personservice'\nimport Notification from './components/notification'\n\nconst App = () => {\n  const [ persons, setPersons] = useState([]) \n  const [ newName, setNewName ] = useState('')\n  const [ newPhoneNumber, setNewPhoneNumber ] = useState('')\n  const [ newFilterValue, setNewFilterValue ] = useState('')\n  const [ notificationMessage, setNotificationMessage ] = useState(null)\n\n  useEffect(() => {\n    Personservice\n      .getAll()\n      .then(initialPersons => {\n        console.log(initialPersons)\n        setPersons(persons.concat(initialPersons))\n      })\n  }, [])\n\n  const handleDelete = (id) => {\n    const person = persons.find((foo) => foo.id === id)\n    const confirmDeletion = window.confirm(`Delete ${person.name}?`)\n    if (confirmDeletion) {\n      Personservice.exterminate(id).then(() => {\n        const deletePersonFromUI = persons.filter((person) => person.id !== id);\n        setPersons(deletePersonFromUI);\n        setNotificationMessage(\n          `Contact '${person.name}' was successfully removed from server`\n        )\n        setTimeout(() => {\n          setNotificationMessage(null)\n        }, 5000)\n      });\n    }\n  };\n\n  let namesToShow = newFilterValue !== \"\" ? \n  persons.filter((person) => person.name.toLowerCase().includes(newFilterValue.toLowerCase())) : persons\n \n  return (\n    <div>\n      <h2>Phonebook</h2>\n      <Notification message={notificationMessage} />\n      filter shown with <Filter setNewFilterValue={setNewFilterValue}/>\n      <Personform \n      newName={newName} \n      setNewName={setNewName} \n      newPhoneNumber={newPhoneNumber} \n      setNewPhoneNumber={setNewPhoneNumber}\n      persons = {persons}\n      setPersons = {setPersons} \n      setNotificationMessage = {setNotificationMessage} />\n      <Persons \n      namesToShow={namesToShow} \n      handleDelete={handleDelete} \n      setNotificationMessage = {setNotificationMessage} />\n    </div>\n  )\n\n}\n\nexport default App","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(<App />, document.getElementById('root'))\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}